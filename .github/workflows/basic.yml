# This is a basic workflow to help you get started with Actions

name: CI-First-Test
env:
  APPLICATION_NAME    : "MYFlask"
  DEPLOY_PACKAGE_NAME : "flask-deploy-file-ver-${{ github.sha }}"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  first_job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latestxxx

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script in First Job
        run: echo Hello, world!

      - name: Echo Application name
        run: |
          echo "Hello, Application Name is ${{ env.APPLICATION_NAME }}"
          
      - name: List current folder
        run: ls -la

      - name: Check aws version
        run: aws --version

      - name: Check zip app version
        run: zip --version

  second_job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [first_job]
    env:
      VAR1: "This is job variable level 1"
      VAR2: "This is job variable level 2"
    
    steps:
      - name: Print
        run: |
          echo "Var1 = ${{ env.VAR1 }}"
          echo "Var2 = ${{ env.VAR2 }}"
          echo "Var3 = $LOCAL_VAR"
        env:
          LOCAL_VAR: "This is step local var"
        
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script in Second Job
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Echo Deployment Pacjage
        run: |
          echo "First `echo` command"
          echo "Deployment Package is ${{ env.DEPLOY_PACKAGE_NAME }}"
